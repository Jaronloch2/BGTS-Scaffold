(function(){
	angular.module("defaultTools",["ui.bootstrap"])
	.run(function(){
		console.log("Default Tools Module injected");
	})
	.service("CompareObjects",function(){
		var i, l, leftChain, rightChain;
		function compare2Objects (x, y) {
			var p;
			if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {
				return true;
			}
			if (x === y) {
				return true;
			}
			if ((typeof x === 'function' && typeof y === 'function') ||
			(x instanceof Date && y instanceof Date) ||
			(x instanceof RegExp && y instanceof RegExp) ||
			(x instanceof String && y instanceof String) ||
			(x instanceof Number && y instanceof Number)) {
				return x.toString() === y.toString();
			}

			// At last checking prototypes as good a we can
			if (!(x instanceof Object && y instanceof Object)) {
				return false;
			}
			if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {
				return false;
			}

			if (x.constructor !== y.constructor) {
				return false;
			}

			if (x.prototype !== y.prototype) {
				return false;
			}
			if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {
			return false;
			}
			for (p in y) {
				if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {
					return false;
				}else if(typeof y[p] !== typeof x[p]){
					return false;
				}
			}
			for (p in x) {
				if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {
					return false;
				}
				else if (typeof y[p] !== typeof x[p]) {
					return false;
				}
				switch (typeof (x[p])) {
					case 'object':
					case 'function':
						leftChain.push(x);
						rightChain.push(y);
						if (!compare2Objects (x[p], y[p])) {
							return false;
						}

						leftChain.pop();
						rightChain.pop();
						break;
						default:
						if (x[p] !== y[p]) {
							return false;
						}
					break;
				}
			}

			return true;
		}

		return function(){
			if (arguments.length < 1) {
				return true; 
			}
			for (i = 1, l = arguments.length; i < l; i++) {
				leftChain = [];
				rightChain = [];
				if (!compare2Objects(arguments[0], arguments[i])) {
					return false;
				}
			}
			return true;
		}

	})
	.service("SearchArrayFor",[function(){
		var saf	= this;
		saf.object	= function(obj, property, list){
			var res = false;;
			for (var i = 0; i < list.length; i++) {
				if (list[i][property] === obj[property]) {
					res = true;
				}
			}
			return res;
		};
	}])
	.service("Animate",["$rootScope","$interval",function($rootScope,$interval){
		var animate		= this;
		animate.rotate	= function(id,element){
			$rootScope.defaultToolsAnimate.type.rotate.degree = 0
			if($rootScope.defaultToolsAnimate.type.rotate[id]!==undefined){
				$interval.cancel($rootScope.defaultToolsAnimate.type.rotate[id]);
			}
			$rootScope.defaultToolsAnimate.type.rotate[id] = $interval(function(){
				angular.element(element).css({ WebkitTransform: 'rotate(' + $rootScope.defaultToolsAnimate.type.rotate.degree + 'deg)'});  
				angular.element(element).css({ '-moz-transform': 'rotate(' + $rootScope.defaultToolsAnimate.type.rotate.degree + 'deg)'}); 
				$rootScope.defaultToolsAnimate.type.rotate.degree++;
				if($rootScope.defaultToolsAnimate.type.rotate.degree>=360){
					$rootScope.defaultToolsAnimate.type.rotate.degree = 0;
				}
			}, 1);
		};
		animate.stop		= function(id,type){
			$interval.cancel($rootScope.defaultToolsAnimate.type[type][id]);
		};
	}])
	.service("InitSiteClock",["$rootScope","$timeout",function($rootScope,$timeout){
		var sc	= this;
		sc.now	= function TimeCtrl() {
			$rootScope.siteClock = "loading clock...";
			$rootScope.tickInterval = 1000 
			var tick = function() {
				$rootScope.siteClock = Date.now();
				$timeout(tick, $rootScope.tickInterval);
			}
			$timeout(tick, $rootScope.tickInterval);
		};
	}])
	.service("SortObject",[function(){
		var so	= this;
		so.now	= function(o){
			var sorted = {},
			key, a = [];

			for (key in o) {
				if (o.hasOwnProperty(key)) {
					a.push(key);
				}
			}
			a.reverse();
			for (key = 0; key < a.length; key++) {
				sorted[a[key]] = o[a[key]];
			}
			return sorted;
		};
	}])
	.service("ToTimezone",[function($scope){
		var ttz		= this;
		ttz.now	= function(date, plus, format){
			var result	= "";
			var d2 = new Date(date);
			d2.setHours(date.getHours() + plus);
			result	= d2;
			return result;
		};
	}])
	.service("PopupModal",["$rootScope","$uibModal",function($rootScope,$uibModal){
		var popup	= this;
		popup.show	= function(title,msg,keyboard,backdrop){
			$rootScope.popupTitle	= title;
			$rootScope.popupMsg		= msg;
			$rootScope.univPopUp	= $uibModal.open({
				templateUrl: '/Modules/default/templates/popup.tpl.html?',
				controller: "PopupController",
				controllerAs: "popupCtrl",
				keyboard: keyboard,
				backdrop: backdrop
			});
			return $rootScope.univPopUp.result.then();
		};
	}])
	.controller("PopupController",["$scope","$uibModalInstance",function($scope,$uibModalInstance){
		$scope.ok	= function(){
			$scope.$close();
		}
		$scope.cancel	= function(){
			$uibModalInstance.dismiss();
		}
		$scope.close	= function(){
			$uibModalInstance.dismiss();
		}
	}]);
})();